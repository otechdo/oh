#![allow(clippy::multiple_crate_versions)]

use ask_gemini::Gemini;
use inquire::{Confirm, Select, Text};
use std::env::var;
use std::io::{Error, ErrorKind};
use std::process::{Command, Stdio};

pub const TIMEZONES: [&str; 597] = [
    "Africa/Abidjan",
    "Africa/Accra",
    "Africa/Addis_Ababa",
    "Africa/Algiers",
    "Africa/Asmara",
    "Africa/Asmera",
    "Africa/Bamako",
    "Africa/Bangui",
    "Africa/Banjul",
    "Africa/Bissau",
    "Africa/Blantyre",
    "Africa/Brazzaville",
    "Africa/Bujumbura",
    "Africa/Cairo",
    "Africa/Casablanca",
    "Africa/Ceuta",
    "Africa/Conakry",
    "Africa/Dakar",
    "Africa/Dar_es_Salaam",
    "Africa/Djibouti",
    "Africa/Douala",
    "Africa/El_Aaiun",
    "Africa/Freetown",
    "Africa/Gaborone",
    "Africa/Harare",
    "Africa/Johannesburg",
    "Africa/Juba",
    "Africa/Kampala",
    "Africa/Khartoum",
    "Africa/Kigali",
    "Africa/Kinshasa",
    "Africa/Lagos",
    "Africa/Libreville",
    "Africa/Lome",
    "Africa/Luanda",
    "Africa/Lubumbashi",
    "Africa/Lusaka",
    "Africa/Malabo",
    "Africa/Maputo",
    "Africa/Maseru",
    "Africa/Mbabane",
    "Africa/Mogadishu",
    "Africa/Monrovia",
    "Africa/Nairobi",
    "Africa/Ndjamena",
    "Africa/Niamey",
    "Africa/Nouakchott",
    "Africa/Ouagadougou",
    "Africa/Porto-Novo",
    "Africa/Sao_Tome",
    "Africa/Timbuktu",
    "Africa/Tripoli",
    "Africa/Tunis",
    "Africa/Windhoek",
    "America/Adak",
    "America/Anchorage",
    "America/Anguilla",
    "America/Antigua",
    "America/Araguaina",
    "America/Argentina/Buenos_Aires",
    "America/Argentina/Catamarca",
    "America/Argentina/ComodRivadavia",
    "America/Argentina/Cordoba",
    "America/Argentina/Jujuy",
    "America/Argentina/La_Rioja",
    "America/Argentina/Mendoza",
    "America/Argentina/Rio_Gallegos",
    "America/Argentina/Salta",
    "America/Argentina/San_Juan",
    "America/Argentina/San_Luis",
    "America/Argentina/Tucuman",
    "America/Argentina/Ushuaia",
    "America/Aruba",
    "America/Asuncion",
    "America/Atikokan",
    "America/Atka",
    "America/Bahia",
    "America/Bahia_Banderas",
    "America/Barbados",
    "America/Belem",
    "America/Belize",
    "America/Blanc-Sablon",
    "America/Boa_Vista",
    "America/Bogota",
    "America/Boise",
    "America/Buenos_Aires",
    "America/Cambridge_Bay",
    "America/Campo_Grande",
    "America/Cancun",
    "America/Caracas",
    "America/Catamarca",
    "America/Cayenne",
    "America/Cayman",
    "America/Chicago",
    "America/Chihuahua",
    "America/Ciudad_Juarez",
    "America/Coral_Harbour",
    "America/Cordoba",
    "America/Costa_Rica",
    "America/Creston",
    "America/Cuiaba",
    "America/Curacao",
    "America/Danmarkshavn",
    "America/Dawson",
    "America/Dawson_Creek",
    "America/Denver",
    "America/Detroit",
    "America/Dominica",
    "America/Edmonton",
    "America/Eirunepe",
    "America/El_Salvador",
    "America/Ensenada",
    "America/Fort_Nelson",
    "America/Fort_Wayne",
    "America/Fortaleza",
    "America/Glace_Bay",
    "America/Godthab",
    "America/Goose_Bay",
    "America/Grand_Turk",
    "America/Grenada",
    "America/Guadeloupe",
    "America/Guatemala",
    "America/Guayaquil",
    "America/Guyana",
    "America/Halifax",
    "America/Havana",
    "America/Hermosillo",
    "America/Indiana/Indianapolis",
    "America/Indiana/Knox",
    "America/Indiana/Marengo",
    "America/Indiana/Petersburg",
    "America/Indiana/Tell_City",
    "America/Indiana/Vevay",
    "America/Indiana/Vincennes",
    "America/Indiana/Winamac",
    "America/Indianapolis",
    "America/Inuvik",
    "America/Iqaluit",
    "America/Jamaica",
    "America/Jujuy",
    "America/Juneau",
    "America/Kentucky/Louisville",
    "America/Kentucky/Monticello",
    "America/Knox_IN",
    "America/Kralendijk",
    "America/La_Paz",
    "America/Lima",
    "America/Los_Angeles",
    "America/Louisville",
    "America/Lower_Princes",
    "America/Maceio",
    "America/Managua",
    "America/Manaus",
    "America/Marigot",
    "America/Martinique",
    "America/Matamoros",
    "America/Mazatlan",
    "America/Mendoza",
    "America/Menominee",
    "America/Merida",
    "America/Metlakatla",
    "America/Mexico_City",
    "America/Miquelon",
    "America/Moncton",
    "America/Monterrey",
    "America/Montevideo",
    "America/Montreal",
    "America/Montserrat",
    "America/Nassau",
    "America/New_York",
    "America/Nipigon",
    "America/Nome",
    "America/Noronha",
    "America/North_Dakota/Beulah",
    "America/North_Dakota/Center",
    "America/North_Dakota/New_Salem",
    "America/Nuuk",
    "America/Ojinaga",
    "America/Panama",
    "America/Pangnirtung",
    "America/Paramaribo",
    "America/Phoenix",
    "America/Port-au-Prince",
    "America/Port_of_Spain",
    "America/Porto_Acre",
    "America/Porto_Velho",
    "America/Puerto_Rico",
    "America/Punta_Arenas",
    "America/Rainy_River",
    "America/Rankin_Inlet",
    "America/Recife",
    "America/Regina",
    "America/Resolute",
    "America/Rio_Branco",
    "America/Rosario",
    "America/Santa_Isabel",
    "America/Santarem",
    "America/Santiago",
    "America/Santo_Domingo",
    "America/Sao_Paulo",
    "America/Scoresbysund",
    "America/Shiprock",
    "America/Sitka",
    "America/St_Barthelemy",
    "America/St_Johns",
    "America/St_Kitts",
    "America/St_Lucia",
    "America/St_Thomas",
    "America/St_Vincent",
    "America/Swift_Current",
    "America/Tegucigalpa",
    "America/Thule",
    "America/Thunder_Bay",
    "America/Tijuana",
    "America/Toronto",
    "America/Tortola",
    "America/Vancouver",
    "America/Virgin",
    "America/Whitehorse",
    "America/Winnipeg",
    "America/Yakutat",
    "America/Yellowknife",
    "Antarctica/Casey",
    "Antarctica/Davis",
    "Antarctica/DumontDUrville",
    "Antarctica/Macquarie",
    "Antarctica/Mawson",
    "Antarctica/McMurdo",
    "Antarctica/Palmer",
    "Antarctica/Rothera",
    "Antarctica/South_Pole",
    "Antarctica/Syowa",
    "Antarctica/Troll",
    "Antarctica/Vostok",
    "Arctic/Longyearbyen",
    "Asia/Aden",
    "Asia/Almaty",
    "Asia/Amman",
    "Asia/Anadyr",
    "Asia/Aqtau",
    "Asia/Aqtobe",
    "Asia/Ashgabat",
    "Asia/Ashkhabad",
    "Asia/Atyrau",
    "Asia/Baghdad",
    "Asia/Bahrain",
    "Asia/Baku",
    "Asia/Bangkok",
    "Asia/Barnaul",
    "Asia/Beirut",
    "Asia/Bishkek",
    "Asia/Brunei",
    "Asia/Calcutta",
    "Asia/Chita",
    "Asia/Choibalsan",
    "Asia/Chongqing",
    "Asia/Chungking",
    "Asia/Colombo",
    "Asia/Dacca",
    "Asia/Damascus",
    "Asia/Dhaka",
    "Asia/Dili",
    "Asia/Dubai",
    "Asia/Dushanbe",
    "Asia/Famagusta",
    "Asia/Gaza",
    "Asia/Harbin",
    "Asia/Hebron",
    "Asia/Ho_Chi_Minh",
    "Asia/Hong_Kong",
    "Asia/Hovd",
    "Asia/Irkutsk",
    "Asia/Istanbul",
    "Asia/Jakarta",
    "Asia/Jayapura",
    "Asia/Jerusalem",
    "Asia/Kabul",
    "Asia/Kamchatka",
    "Asia/Karachi",
    "Asia/Kashgar",
    "Asia/Kathmandu",
    "Asia/Katmandu",
    "Asia/Khandyga",
    "Asia/Kolkata",
    "Asia/Krasnoyarsk",
    "Asia/Kuala_Lumpur",
    "Asia/Kuching",
    "Asia/Kuwait",
    "Asia/Macao",
    "Asia/Macau",
    "Asia/Magadan",
    "Asia/Makassar",
    "Asia/Manila",
    "Asia/Muscat",
    "Asia/Nicosia",
    "Asia/Novokuznetsk",
    "Asia/Novosibirsk",
    "Asia/Omsk",
    "Asia/Oral",
    "Asia/Phnom_Penh",
    "Asia/Pontianak",
    "Asia/Pyongyang",
    "Asia/Qatar",
    "Asia/Qostanay",
    "Asia/Qyzylorda",
    "Asia/Rangoon",
    "Asia/Riyadh",
    "Asia/Saigon",
    "Asia/Sakhalin",
    "Asia/Samarkand",
    "Asia/Seoul",
    "Asia/Shanghai",
    "Asia/Singapore",
    "Asia/Srednekolymsk",
    "Asia/Taipei",
    "Asia/Tashkent",
    "Asia/Tbilisi",
    "Asia/Tehran",
    "Asia/Tel_Aviv",
    "Asia/Thimbu",
    "Asia/Thimphu",
    "Asia/Tokyo",
    "Asia/Tomsk",
    "Asia/Ujung_Pandang",
    "Asia/Ulaanbaatar",
    "Asia/Ulan_Bator",
    "Asia/Urumqi",
    "Asia/Ust-Nera",
    "Asia/Vientiane",
    "Asia/Vladivostok",
    "Asia/Yakutsk",
    "Asia/Yangon",
    "Asia/Yekaterinburg",
    "Asia/Yerevan",
    "Atlantic/Azores",
    "Atlantic/Bermuda",
    "Atlantic/Canary",
    "Atlantic/Cape_Verde",
    "Atlantic/Faeroe",
    "Atlantic/Faroe",
    "Atlantic/Jan_Mayen",
    "Atlantic/Madeira",
    "Atlantic/Reykjavik",
    "Atlantic/South_Georgia",
    "Atlantic/St_Helena",
    "Atlantic/Stanley",
    "Australia/ACT",
    "Australia/Adelaide",
    "Australia/Brisbane",
    "Australia/Broken_Hill",
    "Australia/Canberra",
    "Australia/Currie",
    "Australia/Darwin",
    "Australia/Eucla",
    "Australia/Hobart",
    "Australia/LHI",
    "Australia/Lindeman",
    "Australia/Lord_Howe",
    "Australia/Melbourne",
    "Australia/NSW",
    "Australia/North",
    "Australia/Perth",
    "Australia/Queensland",
    "Australia/South",
    "Australia/Sydney",
    "Australia/Tasmania",
    "Australia/Victoria",
    "Australia/West",
    "Australia/Yancowinna",
    "Brazil/Acre",
    "Brazil/DeNoronha",
    "Brazil/East",
    "Brazil/West",
    "CET",
    "CST6CDT",
    "Canada/Atlantic",
    "Canada/Central",
    "Canada/Eastern",
    "Canada/Mountain",
    "Canada/Newfoundland",
    "Canada/Pacific",
    "Canada/Saskatchewan",
    "Canada/Yukon",
    "Chile/Continental",
    "Chile/EasterIsland",
    "Cuba",
    "EET",
    "EST",
    "EST5EDT",
    "Egypt",
    "Eire",
    "Etc/GMT",
    "Etc/GMT+0",
    "Etc/GMT+1",
    "Etc/GMT+10",
    "Etc/GMT+11",
    "Etc/GMT+12",
    "Etc/GMT+2",
    "Etc/GMT+3",
    "Etc/GMT+4",
    "Etc/GMT+5",
    "Etc/GMT+6",
    "Etc/GMT+7",
    "Etc/GMT+8",
    "Etc/GMT+9",
    "Etc/GMT-0",
    "Etc/GMT-1",
    "Etc/GMT-10",
    "Etc/GMT-11",
    "Etc/GMT-12",
    "Etc/GMT-13",
    "Etc/GMT-14",
    "Etc/GMT-2",
    "Etc/GMT-3",
    "Etc/GMT-4",
    "Etc/GMT-5",
    "Etc/GMT-6",
    "Etc/GMT-7",
    "Etc/GMT-8",
    "Etc/GMT-9",
    "Etc/GMT0",
    "Etc/Greenwich",
    "Etc/UCT",
    "Etc/UTC",
    "Etc/Universal",
    "Etc/Zulu",
    "Europe/Amsterdam",
    "Europe/Andorra",
    "Europe/Astrakhan",
    "Europe/Athens",
    "Europe/Belfast",
    "Europe/Belgrade",
    "Europe/Berlin",
    "Europe/Bratislava",
    "Europe/Brussels",
    "Europe/Bucharest",
    "Europe/Budapest",
    "Europe/Busingen",
    "Europe/Chisinau",
    "Europe/Copenhagen",
    "Europe/Dublin",
    "Europe/Gibraltar",
    "Europe/Guernsey",
    "Europe/Helsinki",
    "Europe/Isle_of_Man",
    "Europe/Istanbul",
    "Europe/Jersey",
    "Europe/Kaliningrad",
    "Europe/Kiev",
    "Europe/Kirov",
    "Europe/Kyiv",
    "Europe/Lisbon",
    "Europe/Ljubljana",
    "Europe/London",
    "Europe/Luxembourg",
    "Europe/Madrid",
    "Europe/Malta",
    "Europe/Mariehamn",
    "Europe/Minsk",
    "Europe/Monaco",
    "Europe/Moscow",
    "Europe/Nicosia",
    "Europe/Oslo",
    "Europe/Paris",
    "Europe/Podgorica",
    "Europe/Prague",
    "Europe/Riga",
    "Europe/Rome",
    "Europe/Samara",
    "Europe/San_Marino",
    "Europe/Sarajevo",
    "Europe/Saratov",
    "Europe/Simferopol",
    "Europe/Skopje",
    "Europe/Sofia",
    "Europe/Stockholm",
    "Europe/Tallinn",
    "Europe/Tirane",
    "Europe/Tiraspol",
    "Europe/Ulyanovsk",
    "Europe/Uzhgorod",
    "Europe/Vaduz",
    "Europe/Vatican",
    "Europe/Vienna",
    "Europe/Vilnius",
    "Europe/Volgograd",
    "Europe/Warsaw",
    "Europe/Zagreb",
    "Europe/Zaporozhye",
    "Europe/Zurich",
    "Factory",
    "GB",
    "GB-Eire",
    "GMT",
    "GMT+0",
    "GMT-0",
    "GMT0",
    "Greenwich",
    "HST",
    "Hongkong",
    "Iceland",
    "Indian/Antananarivo",
    "Indian/Chagos",
    "Indian/Christmas",
    "Indian/Cocos",
    "Indian/Comoro",
    "Indian/Kerguelen",
    "Indian/Mahe",
    "Indian/Maldives",
    "Indian/Mauritius",
    "Indian/Mayotte",
    "Indian/Reunion",
    "Iran",
    "Israel",
    "Jamaica",
    "Japan",
    "Kwajalein",
    "Libya",
    "MET",
    "MST",
    "MST7MDT",
    "Mexico/BajaNorte",
    "Mexico/BajaSur",
    "Mexico/General",
    "NZ",
    "NZ-CHAT",
    "Navajo",
    "PRC",
    "PST8PDT",
    "Pacific/Apia",
    "Pacific/Auckland",
    "Pacific/Bougainville",
    "Pacific/Chatham",
    "Pacific/Chuuk",
    "Pacific/Easter",
    "Pacific/Efate",
    "Pacific/Enderbury",
    "Pacific/Fakaofo",
    "Pacific/Fiji",
    "Pacific/Funafuti",
    "Pacific/Galapagos",
    "Pacific/Gambier",
    "Pacific/Guadalcanal",
    "Pacific/Guam",
    "Pacific/Honolulu",
    "Pacific/Johnston",
    "Pacific/Kanton",
    "Pacific/Kiritimati",
    "Pacific/Kosrae",
    "Pacific/Kwajalein",
    "Pacific/Majuro",
    "Pacific/Marquesas",
    "Pacific/Midway",
    "Pacific/Nauru",
    "Pacific/Niue",
    "Pacific/Norfolk",
    "Pacific/Noumea",
    "Pacific/Pago_Pago",
    "Pacific/Palau",
    "Pacific/Pitcairn",
    "Pacific/Pohnpei",
    "Pacific/Ponape",
    "Pacific/Port_Moresby",
    "Pacific/Rarotonga",
    "Pacific/Saipan",
    "Pacific/Samoa",
    "Pacific/Tahiti",
    "Pacific/Tarawa",
    "Pacific/Tongatapu",
    "Pacific/Truk",
    "Pacific/Wake",
    "Pacific/Wallis",
    "Pacific/Yap",
    "Poland",
    "Portugal",
    "ROC",
    "ROK",
    "Singapore",
    "Turkey",
    "UCT",
    "US/Alaska",
    "US/Aleutian",
    "US/Arizona",
    "US/Central",
    "US/East-Indiana",
    "US/Eastern",
    "US/Hawaii",
    "US/Indiana-Starke",
    "US/Michigan",
    "US/Mountain",
    "US/Pacific",
    "US/Samoa",
    "UTC",
    "Universal",
    "W-SU",
    "WET",
    "Zulu",
];

pub const KEYMAPS: [&str; 595] = [
    "3l",
    "ANSI-dvorak",
    "adnw",
    "al",
    "al-plisi",
    "amiga-de",
    "amiga-us",
    "apple-a1048-sv",
    "apple-a1243-sv",
    "apple-a1243-sv-fn-reverse",
    "apple-internal-0x0253-sv",
    "apple-internal-0x0253-sv-fn-reverse",
    "applkey",
    "ara",
    "at",
    "at-mac",
    "at-nodeadkeys",
    "atari-de",
    "atari-se",
    "atari-uk-falcon",
    "atari-us",
    "az",
    "azerty",
    "ba",
    "ba-alternatequotes",
    "ba-unicode",
    "ba-unicodeus",
    "ba-us",
    "backspace",
    "bashkir",
    "be",
    "be-iso-alternate",
    "be-latin1",
    "be-nodeadkeys",
    "be-oss",
    "be-oss_latin9",
    "be-wang",
    "bg-cp1251",
    "bg-cp855",
    "bg_bds-cp1251",
    "bg_bds-utf8",
    "bg_pho-cp1251",
    "bg_pho-utf8",
    "bone",
    "br",
    "br-abnt",
    "br-abnt2",
    "br-dvorak",
    "br-latin1-abnt2",
    "br-latin1-us",
    "br-nativo",
    "br-nativo-epo",
    "br-nativo-us",
    "br-nodeadkeys",
    "br-thinkpad",
    "by",
    "by-cp1251",
    "by-latin",
    "bywin-cp1251",
    "ca",
    "ca-eng",
    "ca-fr-dvorak",
    "ca-fr-legacy",
    "ca-multix",
    "carpalx",
    "carpalx-full",
    "cf",
    "ch",
    "ch-de_mac",
    "ch-de_nodeadkeys",
    "ch-fr",
    "ch-fr_mac",
    "ch-fr_nodeadkeys",
    "ch-legacy",
    "cm",
    "cm-azerty",
    "cm-dvorak",
    "cm-french",
    "cm-mmuock",
    "cm-qwerty",
    "cn",
    "cn-altgr-pinyin",
    "croat",
    "ctrl",
    "cz",
    "cz-bksl",
    "cz-cp1250",
    "cz-dvorak-ucw",
    "cz-lat2",
    "cz-lat2-prog",
    "cz-qwerty",
    "cz-qwerty-mac",
    "cz-qwerty_bksl",
    "cz-rus",
    "cz-us-qwertz",
    "cz-winkeys",
    "cz-winkeys-qwerty",
    "de",
    "de-T3",
    "de-deadacute",
    "de-deadgraveacute",
    "de-deadtilde",
    "de-dsb",
    "de-dsb_qwertz",
    "de-dvorak",
    "de-e1",
    "de-e2",
    "de-latin1",
    "de-latin1-nodeadkeys",
    "de-mac",
    "de-mac_nodeadkeys",
    "de-mobii",
    "de-neo",
    "de-nodeadkeys",
    "de-qwerty",
    "de-ro",
    "de-ro_nodeadkeys",
    "de-tr",
    "de-us",
    "de_CH-latin1",
    "de_alt_UTF-8",
    "defkeymap",
    "defkeymap_V1.0",
    "dk",
    "dk-dvorak",
    "dk-latin1",
    "dk-mac",
    "dk-mac_nodeadkeys",
    "dk-nodeadkeys",
    "dk-winkeys",
    "dvorak",
    "dvorak-ca-fr",
    "dvorak-de",
    "dvorak-es",
    "dvorak-fr",
    "dvorak-l",
    "dvorak-la",
    "dvorak-no",
    "dvorak-programmer",
    "dvorak-r",
    "dvorak-ru",
    "dvorak-sv-a1",
    "dvorak-sv-a5",
    "dvorak-uk",
    "dvorak-ukp",
    "dz",
    "dz-azerty-deadkeys",
    "dz-qwerty-gb-deadkeys",
    "dz-qwerty-us-deadkeys",
    "ee",
    "ee-dvorak",
    "ee-nodeadkeys",
    "ee-us",
    "emacs",
    "emacs2",
    "en",
    "en-latin9",
    "epo",
    "epo-legacy",
    "es",
    "es-ast",
    "es-cat",
    "es-cp850",
    "es-deadtilde",
    "es-dvorak",
    "es-nodeadkeys",
    "es-olpc",
    "es-winkeys",
    "et",
    "et-nodeadkeys",
    "euro",
    "euro1",
    "euro2",
    "fa",
    "fi",
    "fi-classic",
    "fi-mac",
    "fi-nodeadkeys",
    "fi-smi",
    "fi-winkeys",
    "fo",
    "fo-nodeadkeys",
    "fr",
    "fr-afnor",
    "fr-azerty",
    "fr-bepo",
    "fr-bepo-latin9",
    "fr-bepo_afnor",
    "fr-bepo_latin9",
    "fr-bre",
    "fr-dvorak",
    "fr-latin0",
    "fr-latin1",
    "fr-latin9",
    "fr-latin9_nodeadkeys",
    "fr-mac",
    "fr-nodeadkeys",
    "fr-oci",
    "fr-old",
    "fr-oss",
    "fr-oss_latin9",
    "fr-oss_nodeadkeys",
    "fr-pc",
    "fr-us",
    "fr_CH",
    "fr_CH-latin1",
    "gb",
    "gb-colemak",
    "gb-colemak_dh",
    "gb-dvorak",
    "gb-dvorakukp",
    "gb-extd",
    "gb-gla",
    "gb-intl",
    "gb-mac",
    "gb-mac_intl",
    "gb-pl",
    "ge",
    "ge-ergonomic",
    "ge-mess",
    "ge-ru",
    "gh",
    "gh-akan",
    "gh-avn",
    "gh-ewe",
    "gh-fula",
    "gh-ga",
    "gh-generic",
    "gh-gillbt",
    "gh-hausa",
    "gr",
    "gr-pc",
    "hr",
    "hr-alternatequotes",
    "hr-unicode",
    "hr-unicodeus",
    "hr-us",
    "hu",
    "hu-101_qwerty_comma_dead",
    "hu-101_qwerty_comma_nodead",
    "hu-101_qwerty_dot_dead",
    "hu-101_qwerty_dot_nodead",
    "hu-101_qwertz_comma_dead",
    "hu-101_qwertz_comma_nodead",
    "hu-101_qwertz_dot_dead",
    "hu-101_qwertz_dot_nodead",
    "hu-102_qwerty_comma_dead",
    "hu-102_qwerty_comma_nodead",
    "hu-102_qwerty_dot_dead",
    "hu-102_qwerty_dot_nodead",
    "hu-102_qwertz_comma_dead",
    "hu-102_qwertz_comma_nodead",
    "hu-102_qwertz_dot_dead",
    "hu-102_qwertz_dot_nodead",
    "hu-nodeadkeys",
    "hu-qwerty",
    "hu-standard",
    "hu101",
    "id",
    "ie",
    "ie-CloGaelach",
    "ie-UnicodeExpert",
    "ie-ogam_is434",
    "il",
    "il-heb",
    "il-phonetic",
    "il-si2",
    "in-eng",
    "in-iipa",
    "iq-ku",
    "iq-ku_alt",
    "iq-ku_ara",
    "iq-ku_f",
    "ir-ku",
    "ir-ku_alt",
    "ir-ku_ara",
    "ir-ku_f",
    "is",
    "is-dvorak",
    "is-latin1",
    "is-latin1-us",
    "is-mac",
    "is-mac_legacy",
    "it",
    "it-fur",
    "it-geo",
    "it-ibm",
    "it-intl",
    "it-mac",
    "it-nodeadkeys",
    "it-scn",
    "it-us",
    "it-winkeys",
    "it2",
    "jp",
    "jp-OADG109A",
    "jp-dvorak",
    "jp-kana86",
    "jp106",
    "kazakh",
    "ke",
    "ke-kik",
    "keypad",
    "ko",
    "koy",
    "kr",
    "kr-kr104",
    "ky_alt_sh-UTF-8",
    "kyrgyz",
    "kz-latin",
    "la-latin1",
    "latam",
    "latam-colemak",
    "latam-deadtilde",
    "latam-dvorak",
    "latam-nodeadkeys",
    "lk-us",
    "lt",
    "lt-ibm",
    "lt-lekp",
    "lt-lekpa",
    "lt-ratise",
    "lt-sgs",
    "lt-std",
    "lt-us",
    "lt.baltic",
    "lt.l4",
    "lv",
    "lv-adapted",
    "lv-apostrophe",
    "lv-ergonomic",
    "lv-fkey",
    "lv-modern",
    "lv-tilde",
    "ma-french",
    "ma-rif",
    "mac-be",
    "mac-de-latin1",
    "mac-de-latin1-nodeadkeys",
    "mac-de_CH",
    "mac-dk-latin1",
    "mac-dvorak",
    "mac-es",
    "mac-euro",
    "mac-euro2",
    "mac-fi-latin1",
    "mac-fr",
    "mac-fr-legacy",
    "mac-fr_CH-latin1",
    "mac-it",
    "mac-no-latin1",
    "mac-pl",
    "mac-pt-latin1",
    "mac-se",
    "mac-template",
    "mac-uk",
    "mac-us",
    "md",
    "md-gag",
    "me",
    "me-latinalternatequotes",
    "me-latinunicode",
    "me-latinunicodeyz",
    "me-latinyz",
    "mk",
    "mk-cp1251",
    "mk-utf",
    "mk0",
    "ml",
    "ml-fr-oss",
    "ml-us-intl",
    "ml-us-mac",
    "mm",
    "mm-mnw",
    "mm-shn",
    "mod-dh-ansi-us",
    "mod-dh-ansi-us-awing",
    "mod-dh-ansi-us-fatz",
    "mod-dh-ansi-us-fatz-wide",
    "mod-dh-ansi-us-wide",
    "mod-dh-iso-uk",
    "mod-dh-iso-uk-wide",
    "mod-dh-iso-us",
    "mod-dh-iso-us-wide",
    "mod-dh-matrix-us",
    "mt",
    "mt-alt-gb",
    "mt-alt-us",
    "mt-us",
    "neo",
    "neoqwertz",
    "ng",
    "ng-hausa",
    "ng-igbo",
    "ng-yoruba",
    "nl",
    "nl-mac",
    "nl-std",
    "nl-us",
    "nl2",
    "no",
    "no-colemak",
    "no-colemak_dh",
    "no-colemak_dh_wide",
    "no-dvorak",
    "no-latin1",
    "no-mac",
    "no-mac_nodeadkeys",
    "no-nodeadkeys",
    "no-smi",
    "no-smi_nodeadkeys",
    "no-winkeys",
    "nz",
    "nz-mao",
    "pc110",
    "ph",
    "ph-capewell-dvorak",
    "ph-capewell-qwerf2k6",
    "ph-colemak",
    "ph-dvorak",
    "pl",
    "pl-csb",
    "pl-dvorak",
    "pl-dvorak_altquotes",
    "pl-dvorak_quotes",
    "pl-dvp",
    "pl-legacy",
    "pl-qwertz",
    "pl-szl",
    "pl1",
    "pl2",
    "pl3",
    "pl4",
    "pt",
    "pt-latin1",
    "pt-latin9",
    "pt-mac",
    "pt-mac_nodeadkeys",
    "pt-nativo",
    "pt-nativo-epo",
    "pt-nativo-us",
    "pt-nodeadkeys",
    "pt-olpc",
    "ro",
    "ro-std",
    "ro-winkeys",
    "ro_std",
    "rs-latin",
    "rs-latinalternatequotes",
    "rs-latinunicode",
    "rs-latinunicodeyz",
    "rs-latinyz",
    "ru",
    "ru-cp1251",
    "ru-cv_latin",
    "ru-ms",
    "ru-ruchey_en",
    "ru-yawerty",
    "ru1",
    "ru2",
    "ru3",
    "ru4",
    "ru_win",
    "ruwin_alt-CP1251",
    "ruwin_alt-KOI8-R",
    "ruwin_alt-UTF-8",
    "ruwin_alt_sh-UTF-8",
    "ruwin_cplk-CP1251",
    "ruwin_cplk-KOI8-R",
    "ruwin_cplk-UTF-8",
    "ruwin_ct_sh-CP1251",
    "ruwin_ct_sh-KOI8-R",
    "ruwin_ct_sh-UTF-8",
    "ruwin_ctrl-CP1251",
    "ruwin_ctrl-KOI8-R",
    "ruwin_ctrl-UTF-8",
    "se",
    "se-dvorak",
    "se-fi-ir209",
    "se-fi-lat6",
    "se-ir209",
    "se-lat6",
    "se-latin1",
    "se-mac",
    "se-nodeadkeys",
    "se-smi",
    "se-svdvorak",
    "se-us",
    "se-us_dvorak",
    "sg",
    "sg-latin1",
    "sg-latin1-lk450",
    "si",
    "si-alternatequotes",
    "si-us",
    "sk",
    "sk-bksl",
    "sk-prog-qwerty",
    "sk-prog-qwertz",
    "sk-qwerty",
    "sk-qwerty_bksl",
    "sk-qwertz",
    "slovene",
    "sr-cy",
    "sr-latin",
    "sun-pl",
    "sun-pl-altgraph",
    "sundvorak",
    "sunkeymap",
    "sunt4-es",
    "sunt4-fi-latin1",
    "sunt4-no-latin1",
    "sunt5-cz-us",
    "sunt5-de-latin1",
    "sunt5-es",
    "sunt5-fi-latin1",
    "sunt5-fr-latin1",
    "sunt5-ru",
    "sunt5-uk",
    "sunt5-us-cz",
    "sunt6-uk",
    "sv-latin1",
    "sy-ku",
    "sy-ku_alt",
    "sy-ku_f",
    "tj_alt-UTF8",
    "tm",
    "tm-alt",
    "tr",
    "tr-alt",
    "tr-e",
    "tr-f",
    "tr-intl",
    "tr-ku",
    "tr-ku_alt",
    "tr-ku_f",
    "tr_f-latin5",
    "tr_q-latin5",
    "tralt",
    "trf",
    "trf-fgGIod",
    "trq",
    "ttwin_alt-UTF-8",
    "ttwin_cplk-UTF-8",
    "ttwin_ct_sh-UTF-8",
    "ttwin_ctrl-UTF-8",
    "tw",
    "tw-indigenous",
    "tw-saisiyat",
    "ua",
    "ua-cp1251",
    "ua-crh",
    "ua-crh_alt",
    "ua-crh_f",
    "ua-utf",
    "ua-utf-ws",
    "ua-ws",
    "uk",
    "unicode",
    "us",
    "us-acentos",
    "us-alt-intl",
    "us-altgr-intl",
    "us-colemak",
    "us-colemak_dh",
    "us-colemak_dh_iso",
    "us-colemak_dh_ortho",
    "us-colemak_dh_wide",
    "us-colemak_dh_wide_iso",
    "us-dvorak",
    "us-dvorak-alt-intl",
    "us-dvorak-classic",
    "us-dvorak-intl",
    "us-dvorak-l",
    "us-dvorak-mac",
    "us-dvorak-r",
    "us-dvp",
    "us-euro",
    "us-haw",
    "us-hbs",
    "us-intl",
    "us-mac",
    "us-norman",
    "us-olpc2",
    "us-symbolic",
    "us-workman",
    "us-workman-intl",
    "us1",
    "uz-latin",
    "vn",
    "vn-fr",
    "vn-us",
    "wangbe",
    "wangbe2",
    "windowkeys",
];
pub const KEYMAP_OPTIONS: [&str; 220] = [
    "Compose",
    "altwin",
    "altwin:alt_super_win",
    "altwin:alt_win",
    "altwin:ctrl_alt_win",
    "altwin:ctrl_rwin",
    "altwin:ctrl_win",
    "altwin:hyper_win",
    "altwin:left_meta_win",
    "altwin:menu",
    "altwin:menu_win",
    "altwin:meta_alt",
    "altwin:meta_win",
    "altwin:prtsc_rwin",
    "altwin:swap_alt_win",
    "altwin:swap_lalt_lwin",
    "apple:alupckeys",
    "apple:jp_oadg109a",
    "apple:jp_pc106",
    "caps",
    "caps:backspace",
    "caps:capslock",
    "caps:ctrl_modifier",
    "caps:escape",
    "caps:escape_shifted_capslock",
    "caps:hyper",
    "caps:internal",
    "caps:internal_nocancel",
    "caps:menu",
    "caps:none",
    "caps:numlock",
    "caps:shift",
    "caps:shift_nocancel",
    "caps:shiftlock",
    "caps:super",
    "caps:swapescape",
    "compat",
    "compose:102",
    "compose:102-altgr",
    "compose:caps",
    "compose:caps-altgr",
    "compose:ins",
    "compose:lctrl",
    "compose:lctrl-altgr",
    "compose:lwin",
    "compose:lwin-altgr",
    "compose:menu",
    "compose:menu-altgr",
    "compose:paus",
    "compose:prsc",
    "compose:ralt",
    "compose:rctrl",
    "compose:rctrl-altgr",
    "compose:rwin",
    "compose:rwin-altgr",
    "compose:sclk",
    "ctrl",
    "ctrl:aa_ctrl",
    "ctrl:ac_ctrl",
    "ctrl:hyper_capscontrol",
    "ctrl:lctrl_meta",
    "ctrl:menu_rctrl",
    "ctrl:nocaps",
    "ctrl:rctrl_ralt",
    "ctrl:swap_lalt_lctl",
    "ctrl:swap_lalt_lctl_lwin",
    "ctrl:swap_lwin_lctl",
    "ctrl:swap_ralt_rctl",
    "ctrl:swap_rwin_rctl",
    "ctrl:swapcaps",
    "currencysign",
    "custom",
    "custom:types",
    "esperanto",
    "esperanto:colemak",
    "esperanto:dvorak",
    "esperanto:qwerty",
    "eurosign:2",
    "eurosign:4",
    "eurosign:5",
    "eurosign:e",
    "grab:break_actions",
    "grab:debug",
    "grp",
    "grp:alt_altgr_toggle",
    "grp:alt_caps_toggle",
    "grp:alt_shift_toggle",
    "grp:alt_space_toggle",
    "grp:alts_toggle",
    "grp:caps_select",
    "grp:caps_switch",
    "grp:caps_toggle",
    "grp:ctrl_alt_toggle",
    "grp:ctrl_select",
    "grp:ctrl_shift_toggle",
    "grp:ctrl_space_toggle",
    "grp:ctrls_toggle",
    "grp:lalt_lshift_toggle",
    "grp:lalt_toggle",
    "grp:lctrl_lshift_toggle",
    "grp:lctrl_lwin_rctrl_menu",
    "grp:lctrl_lwin_toggle",
    "grp:lctrl_toggle",
    "grp:lshift_toggle",
    "grp:lswitch",
    "grp:lwin_switch",
    "grp:lwin_toggle",
    "grp:menu_switch",
    "grp:menu_toggle",
    "grp:ralt_rshift_toggle",
    "grp:rctrl_rshift_toggle",
    "grp:rctrl_switch",
    "grp:rctrl_toggle",
    "grp:rshift_toggle",
    "grp:rwin_switch",
    "grp:rwin_toggle",
    "grp:sclk_toggle",
    "grp:shift_caps_toggle",
    "grp:shifts_toggle",
    "grp:switch",
    "grp:toggle",
    "grp:win_menu_select",
    "grp:win_space_toggle",
    "grp:win_switch",
    "grp_led",
    "grp_led:caps",
    "grp_led:num",
    "grp_led:scroll",
    "japan",
    "japan:hztg_escape",
    "japan:kana_lock",
    "japan:nicola_f_bs",
    "keypad",
    "keypad:atm",
    "keypad:future",
    "keypad:future_wang",
    "keypad:hex",
    "keypad:legacy",
    "keypad:legacy_wang",
    "keypad:oss",
    "keypad:oss_wang",
    "keypad:pointerkeys",
    "korean",
    "korean:ralt_hangul",
    "korean:ralt_hanja",
    "korean:rctrl_hangul",
    "korean:rctrl_hanja",
    "kpdl",
    "kpdl:comma",
    "kpdl:commaoss",
    "kpdl:dot",
    "kpdl:dotoss",
    "kpdl:dotoss_latin9",
    "kpdl:kposs",
    "kpdl:momayyezoss",
    "kpdl:semi",
    "lv2",
    "lv2:lsgt_switch",
    "lv3",
    "lv3:alt_switch",
    "lv3:bksl_switch",
    "lv3:bksl_switch_latch",
    "lv3:caps_switch",
    "lv3:caps_switch_latch",
    "lv3:enter_switch",
    "lv3:lalt_switch",
    "lv3:lsgt_switch",
    "lv3:lsgt_switch_latch",
    "lv3:lwin_switch",
    "lv3:menu_switch",
    "lv3:ralt_alt",
    "lv3:ralt_switch",
    "lv3:ralt_switch_multikey",
    "lv3:rwin_switch",
    "lv3:switch",
    "lv3:win_switch",
    "lv5",
    "lv5:caps_switch",
    "lv5:lsgt_switch",
    "lv5:lsgt_switch_lock",
    "lv5:lsgt_switch_lock_cancel",
    "lv5:lwin_switch_lock",
    "lv5:menu_switch",
    "lv5:ralt_switch",
    "lv5:ralt_switch_lock",
    "lv5:rctrl_switch",
    "lv5:rwin_switch_lock",
    "misc:apl",
    "misc:typo",
    "mod_led",
    "mod_led:compose",
    "nbsp",
    "nbsp:level2",
    "nbsp:level3",
    "nbsp:level3n",
    "nbsp:level4",
    "nbsp:level4n",
    "nbsp:level4nl",
    "nbsp:none",
    "nbsp:zwnj2",
    "nbsp:zwnj2nb3",
    "nbsp:zwnj2nb3nnb4",
    "nbsp:zwnj2nb3zwj4",
    "nbsp:zwnj2zwj3",
    "nbsp:zwnj2zwj3nb4",
    "nbsp:zwnj3zwj4",
    "numpad:mac",
    "numpad:microsoft",
    "numpad:pc",
    "numpad:shift3",
    "rupeesign:4",
    "shift:both_capslock",
    "shift:both_capslock_cancel",
    "shift:both_shiftlock",
    "shift:breaks_caps",
    "solaris",
    "solaris:sun_compat",
    "srvrkeys:none",
    "terminate",
    "terminate:ctrl_alt_bksp",
];

pub const KEYMAP_MODELS: [&str; 187] = [
    "a4_rfkb23",
    "a4techKB21",
    "a4techKBS8",
    "acer_c300",
    "acer_ferrari4k",
    "acer_laptop",
    "airkey",
    "apex300",
    "apple",
    "applealu_ansi",
    "applealu_iso",
    "applealu_jis",
    "armada",
    "asus_laptop",
    "azonaRF2300",
    "benqx",
    "benqx730",
    "benqx800",
    "brother",
    "btc5090",
    "btc5113rf",
    "btc5126t",
    "btc6301urf",
    "btc9000",
    "btc9000a",
    "btc9001ah",
    "btc9019u",
    "btc9116u",
    "cherryblue",
    "cherrybluea",
    "cherryblueb",
    "cherrybunlim",
    "cherrycmexpert",
    "cherrycyboard",
    "chicony",
    "chicony0108",
    "chicony0420",
    "chicony9885",
    "chromebook",
    "classmate",
    "compalfl90",
    "compaqeak8",
    "compaqik13",
    "compaqik18",
    "compaqik7",
    "creativedw7000",
    "cymotionlinux",
    "dell",
    "dell101",
    "dellm65",
    "dellsk8125",
    "dellsk8135",
    "dellusbmm",
    "dexxa",
    "diamond",
    "dtk2000",
    "emachines",
    "ennyah_dkb1008",
    "everex",
    "flexpro",
    "fscaa1667g",
    "genius",
    "geniuscomfy",
    "geniuscomfy2",
    "geniuskb19e",
    "geniuskkb2050hs",
    "gyration",
    "hhk",
    "honeywell_euroboard",
    "hp250x",
    "hp500fa",
    "hp5xx",
    "hp6000",
    "hpdv5",
    "hpi6",
    "hpmini110",
    "hpnx9020",
    "hpxe3gc",
    "hpxe3gf",
    "hpxt1000",
    "hpzt11xx",
    "ibm_spacesaver",
    "inspiron",
    "ipaq",
    "itouch",
    "kinesis",
    "latitude",
    "logiaccess",
    "logicd",
    "logicd_it",
    "logicd_nav",
    "logicd_opt",
    "logicda",
    "logicink",
    "logiclx300",
    "logidinovo",
    "logidinovoedge",
    "logiex110",
    "logii350",
    "logiik",
    "logiinkse",
    "logiinkseusb",
    "logiitc",
    "logimel",
    "logitech_base",
    "logitech_g15",
    "logiultrax",
    "logiultraxc",
    "macbook78",
    "macbook79",
    "macintosh",
    "macintosh_hhk",
    "macintosh_old",
    "microsoft",
    "microsoft4000",
    "microsoft7000",
    "microsoftccurve2k",
    "microsoftelite",
    "microsoftinet",
    "microsoftmult",
    "microsoftoffice",
    "microsoftpro",
    "microsoftprooem",
    "microsoftprose",
    "microsoftprousb",
    "microsoftsurface",
    "mx1998",
    "mx2500",
    "mx2750",
    "olpc",
    "omnikey101",
    "oretec",
    "pc101",
    "pc102",
    "pc104",
    "pc104alt",
    "pc105",
    "pc86",
    "pc98",
    "ppkb",
    "precision_m",
    "presario",
    "propeller",
    "qtronix",
    "rapidaccess",
    "rapidaccess2",
    "samsung4500",
    "samsung4510",
    "sanwaskbkg3",
    "scorpius",
    "silvercrest",
    "sk1300",
    "sk2500",
    "sk6200",
    "sk7100",
    "sp_inet",
    "sun_type6_euro_usb",
    "sun_type6_jp",
    "sun_type6_jp_usb",
    "sun_type6_unix_usb",
    "sun_type6_usb",
    "sun_type7_euro_usb",
    "sun_type7_jp_usb",
    "sun_type7_unix_usb",
    "sun_type7_usb",
    "sven",
    "sven303",
    "symplon",
    "targa_v811",
    "teck227",
    "teck229",
    "thinkpad",
    "thinkpad60",
    "thinkpadz60",
    "tm2020",
    "tm2030PS2",
    "tm2030USB",
    "tm2030USB-102",
    "tm2030USB-106",
    "toshiba_s3000",
    "trust",
    "trust_slimline",
    "trustda",
    "unitekkb1925",
    "vsonku306",
    "winbook",
    "yahoo",
];
pub const KEYMAP_LAYOUTS: [&str; 99] = [
    "af", "al", "am", "ara", "at", "au", "az", "ba", "bd", "be", "bg", "br", "brai", "bt", "bw",
    "by", "ca", "cd", "ch", "cm", "cn", "custom", "cz", "de", "dk", "dz", "ee", "eg", "epo", "es",
    "et", "fi", "fo", "fr", "gb", "ge", "gh", "gn", "gr", "hr", "hu", "id", "ie", "il", "in", "iq",
    "ir", "is", "it", "jp", "ke", "kg", "kh", "kr", "kz", "la", "latam", "lk", "lt", "lv", "ma",
    "md", "me", "mk", "ml", "mm", "mn", "mt", "mv", "my", "ng", "nl", "no", "np", "nz", "ph", "pk",
    "pl", "pt", "ro", "rs", "ru", "se", "si", "sk", "sn", "sy", "tg", "th", "tj", "tm", "tr", "tw",
    "tz", "ua", "us", "uz", "vn", "za",
];
pub const LOCALES: [&str; 496] = [
    "aa_DJ.UTF-8 ",
    "aa_DJ8859-1",
    "aa_ER",
    "aa_ET",
    "af_ZA.UTF-8",
    "af_ZA",
    "agr_PE",
    "ak_GH",
    "am_ET",
    "an_ES.UTF-8",
    "an_ES8859-15",
    "anp_IN",
    "ar_AE.UTF-8",
    "ar_AE8859-6",
    "ar_BH.UTF-8",
    "ar_BH8859-6",
    "ar_DZ.UTF-8",
    "ar_DZ8859-6",
    "ar_EG.UTF-8",
    "ar_EG8859-6",
    "ar_IN",
    "ar_IQ.UTF-8",
    "ar_IQ8859-6",
    "ar_JO.UTF-8",
    "ar_JO8859-6",
    "ar_KW.UTF-8",
    "ar_KW8859-6",
    "ar_LB.UTF-8",
    "ar_LB8859-6",
    "ar_LY.UTF-8",
    "ar_LY8859-6",
    "ar_MA.UTF-8",
    "ar_MA8859-6",
    "ar_OM.UTF-8",
    "ar_OM8859-6",
    "ar_QA.UTF-8",
    "ar_QA8859-6",
    "ar_SA.UTF-8",
    "ar_SA8859-6",
    "ar_SD.UTF-8",
    "ar_SD8859-6",
    "ar_SS",
    "ar_SY.UTF-8",
    "ar_SY8859-6",
    "ar_TN.UTF-8",
    "ar_TN8859-6",
    "ar_YE.UTF-8",
    "ar_YE8859-6",
    "ayc_PE",
    "az_AZ",
    "az_IR",
    "as_IN",
    "ast_ES.UTF-8",
    "ast_ES8859-15",
    "be_BY.UTF-8",
    "be_BY CP1251",
    "be_BY@latin",
    "bem_ZM",
    "ber_DZ",
    "ber_MA",
    "bg_BG.UTF-8",
    "bg_BG CP1251",
    "bhb_IN.UTF-8",
    "bho_IN",
    "bho_NP",
    "bi_VU",
    "bn_BD",
    "bn_IN",
    "bo_CN",
    "bo_IN",
    "br_FR.UTF-8",
    "br_FR8859-1",
    "br_FR@euro8859-15",
    "brx_IN",
    "bs_BA.UTF-8",
    "bs_BA8859-2",
    "byn_ER",
    "ca_AD.UTF-8",
    "ca_AD8859-15",
    "ca_ES.UTF-8",
    "ca_ES8859-1",
    "ca_ES@euro8859-15",
    "ca_ES@valencia",
    "ca_FR.UTF-8",
    "ca_FR8859-15",
    "ca_IT.UTF-8",
    "ca_IT8859-15",
    "ce_RU",
    "chr_US",
    "ckb_IQ",
    "cmn_TW",
    "crh_RU",
    "crh_UA",
    "cs_CZ.UTF-8",
    "cs_CZ8859-2",
    "csb_PL",
    "cv_RU",
    "cy_GB.UTF-8",
    "cy_GB8859-14",
    "da_DK.UTF-8",
    "da_DK8859-1",
    "de_AT.UTF-8",
    "de_AT8859-1",
    "de_AT@euro8859-15",
    "de_BE.UTF-8",
    "de_BE8859-1",
    "de_BE@euro8859-15",
    "de_CH.UTF-8",
    "de_CH8859-1",
    "de_DE.UTF-8",
    "de_DE8859-1",
    "de_DE@euro8859-15",
    "de_IT.UTF-8",
    "de_IT8859-1",
    "de_LI.UTF-8",
    "de_LU.UTF-8",
    "de_LU8859-1",
    "de_LU@euro8859-15",
    "doi_IN",
    "dsb_DE",
    "dv_MV",
    "dz_BT",
    "el_GR.UTF-8",
    "el_GR8859-7",
    "el_GR@euro8859-7",
    "el_CY.UTF-8",
    "el_CY8859-7",
    "en_AG",
    "en_AU.UTF-8",
    "en_AU8859-1",
    "en_BW.UTF-8",
    "en_BW8859-1",
    "en_CA.UTF-8",
    "en_CA8859-1",
    "en_DK.UTF-8",
    "en_DK8859-1",
    "en_GB.UTF-8",
    "en_GB8859-1",
    "en_HK.UTF-8",
    "en_HK8859-1",
    "en_IE.UTF-8",
    "en_IE8859-1",
    "en_IE@euro8859-15",
    "en_IL",
    "en_IN",
    "en_NG",
    "en_NZ.UTF-8",
    "en_NZ8859-1",
    "en_PH.UTF-8",
    "en_PH8859-1",
    "en_SC.UTF-8",
    "en_SG.UTF-8",
    "en_SG8859-1",
    "en_US.UTF-8",
    "en_US8859-1",
    "en_ZA.UTF-8",
    "en_ZA8859-1",
    "en_ZM",
    "en_ZW.UTF-8",
    "en_ZW8859-1",
    "eo",
    "es_AR.UTF-8",
    "es_AR8859-1",
    "es_BO.UTF-8",
    "es_BO8859-1",
    "es_CL.UTF-8",
    "es_CL8859-1",
    "es_CO.UTF-8",
    "es_CO8859-1",
    "es_CR.UTF-8",
    "es_CR8859-1",
    "es_CU",
    "es_DO.UTF-8",
    "es_DO8859-1",
    "es_EC.UTF-8",
    "es_EC8859-1",
    "es_ES.UTF-8",
    "es_ES8859-1",
    "es_ES@euro8859-15",
    "es_GT.UTF-8",
    "es_GT8859-1",
    "es_HN.UTF-8",
    "es_HN8859-1",
    "es_MX.UTF-8",
    "es_MX8859-1",
    "es_NI.UTF-8",
    "es_NI8859-1",
    "es_PA.UTF-8",
    "es_PA8859-1",
    "es_PE.UTF-8",
    "es_PE8859-1",
    "es_PR.UTF-8",
    "es_PR8859-1",
    "es_PY.UTF-8",
    "es_PY8859-1",
    "es_SV.UTF-8",
    "es_SV8859-1",
    "es_US.UTF-8",
    "es_US8859-1",
    "es_UY.UTF-8",
    "es_UY8859-1",
    "es_VE.UTF-8",
    "es_VE8859-1",
    "et_EE.UTF-8",
    "et_EE8859-1",
    "et_EE.ISO-8859-158859-15",
    "eu_ES.UTF-8",
    "eu_ES8859-1",
    "eu_ES@euro8859-15",
    "fa_IR",
    "ff_SN",
    "fi_FI.UTF-8",
    "fi_FI8859-1",
    "fi_FI@euro8859-15",
    "fil_PH",
    "fo_FO.UTF-8",
    "fo_FO8859-1",
    "fr_BE.UTF-8",
    "fr_BE8859-1",
    "fr_BE@euro8859-15",
    "fr_CA.UTF-8",
    "fr_CA8859-1",
    "fr_CH.UTF-8",
    "fr_CH8859-1",
    "fr_FR.UTF-8",
    "fr_FR8859-1",
    "fr_FR@euro8859-15",
    "fr_LU.UTF-8",
    "fr_LU8859-1",
    "fr_LU@euro8859-15",
    "fur_IT",
    "fy_NL",
    "fy_DE",
    "ga_IE.UTF-8",
    "ga_IE8859-1",
    "ga_IE@euro8859-15",
    "gbm_IN",
    "gd_GB.UTF-8",
    "gd_GB8859-15",
    "gez_ER",
    "gez_ER@abegede",
    "gez_ET",
    "gez_ET@abegede",
    "gl_ES.UTF-8",
    "gl_ES8859-1",
    "gl_ES@euro8859-15",
    "gu_IN",
    "gv_GB.UTF-8",
    "gv_GB8859-1",
    "ha_NG",
    "hak_TW",
    "he_IL.UTF-8",
    "he_IL8859-8",
    "hi_IN",
    "hif_FJ",
    "hne_IN",
    "hr_HR.UTF-8",
    "hr_HR8859-2",
    "hsb_DE8859-2",
    "hsb_DE.UTF-8",
    "ht_HT",
    "hu_HU.UTF-8",
    "hu_HU8859-2",
    "hy_AM",
    "hy_AM.ARMSCII-88",
    "ia_FR",
    "id_ID.UTF-8",
    "id_ID8859-1",
    "ig_NG",
    "ik_CA",
    "is_IS.UTF-8",
    "is_IS8859-1",
    "it_CH.UTF-8",
    "it_CH8859-1",
    "it_IT.UTF-8",
    "it_IT8859-1",
    "it_IT@euro8859-15",
    "iu_CA",
    "ja_JP.EUC-JP",
    "ja_JP.UTF-8",
    "ka_GE.UTF-8",
    "ka_GE GEORGIAN-PS",
    "kab_DZ",
    "kk_KZ.UTF-8",
    "kk_KZ PT154",
    "kl_GL.UTF-8",
    "kl_GL8859-1",
    "km_KH",
    "kn_IN",
    "ko_KR.EUC-KR",
    "ko_KR.UTF-8",
    "kok_IN",
    "ks_IN",
    "ks_IN@devanagari",
    "ku_TR.UTF-8",
    "ku_TR8859-9",
    "kv_RU",
    "kw_GB.UTF-8",
    "kw_GB8859-1",
    "ky_KG",
    "lb_LU",
    "lg_UG.UTF-8",
    "lg_UG8859-10",
    "li_BE",
    "li_NL",
    "lij_IT",
    "ln_CD",
    "lo_LA",
    "lt_LT.UTF-8",
    "lt_LT8859-13",
    "lv_LV.UTF-8",
    "lv_LV8859-13",
    "lzh_TW",
    "mag_IN",
    "mai_IN",
    "mai_NP",
    "mfe_MU",
    "mg_MG.UTF-8",
    "mg_MG8859-15",
    "mhr_RU",
    "mi_NZ.UTF-8",
    "mi_NZ8859-13",
    "miq_NI",
    "mjw_IN",
    "mk_MK.UTF-8",
    "mk_MK8859-5",
    "ml_IN",
    "mn_MN",
    "mni_IN",
    "mnw_MM",
    "mr_IN",
    "ms_MY.UTF-8",
    "ms_MY8859-1",
    "mt_MT.UTF-8",
    "mt_MT8859-3",
    "my_MM",
    "nan_TW",
    "nan_TW@latin",
    "nb_NO.UTF-8",
    "nb_NO8859-1",
    "nds_DE",
    "nds_NL",
    "ne_NP",
    "nhn_MX",
    "niu_NU",
    "niu_NZ",
    "nl_AW",
    "nl_BE.UTF-8",
    "nl_BE8859-1",
    "nl_BE@euro8859-15",
    "nl_NL.UTF-8",
    "nl_NL8859-1",
    "nl_NL@euro8859-15",
    "nn_NO.UTF-8",
    "nn_NO8859-1",
    "nr_ZA",
    "nso_ZA",
    "oc_FR.UTF-8",
    "oc_FR8859-1",
    "om_ET",
    "om_KE.UTF-8",
    "om_KE8859-1",
    "or_IN",
    "os_RU",
    "pa_IN",
    "pa_PK",
    "pap_AW",
    "pap_CW",
    "pl_PL.UTF-8",
    "pl_PL8859-2",
    "ps_AF",
    "pt_BR.UTF-8",
    "pt_BR8859-1",
    "pt_PT.UTF-8",
    "pt_PT8859-1",
    "pt_PT@euro8859-15",
    "quz_PE",
    "raj_IN",
    "rif_MA",
    "ro_RO.UTF-8",
    "ro_RO8859-2",
    "ru_RU.KOI8-R KOI8-R",
    "ru_RU.UTF-8",
    "ru_RU8859-5",
    "ru_UA.UTF-8",
    "ru_UA KOI8-U",
    "rw_RW",
    "sa_IN",
    "sah_RU",
    "sat_IN",
    "sc_IT",
    "sd_IN",
    "sd_IN@devanagari",
    "se_NO",
    "sgs_LT",
    "shn_MM",
    "shs_CA",
    "si_LK",
    "sid_ET",
    "sk_SK.UTF-8",
    "sk_SK8859-2",
    "sl_SI.UTF-8",
    "sl_SI8859-2",
    "sm_WS",
    "so_DJ.UTF-8",
    "so_DJ8859-1",
    "so_ET",
    "so_KE.UTF-8",
    "so_KE8859-1",
    "so_SO.UTF-8",
    "so_SO8859-1",
    "sq_AL.UTF-8",
    "sq_AL8859-1",
    "sq_MK",
    "sr_ME",
    "sr_RS",
    "sr_RS@latin",
    "ss_ZA",
    "ssy_ER",
    "st_ZA.UTF-8",
    "st_ZA8859-1",
    "su_ID",
    "sv_FI.UTF-8",
    "sv_FI8859-1",
    "sv_FI@euro8859-15",
    "sv_SE.UTF-8",
    "sv_SE8859-1",
    "sw_KE",
    "sw_TZ",
    "syr",
    "szl_PL",
    "ta_IN",
    "ta_LK",
    "tcy_IN.UTF-8",
    "te_IN",
    "tg_TJ.UTF-8",
    "tg_TJ KOI8-T",
    "th_TH.UTF-8",
    "th_TH TIS-620",
    "the_NP",
    "ti_ER",
    "ti_ET",
    "tig_ER",
    "tk_TM",
    "tl_PH.UTF-8",
    "tl_PH8859-1",
    "tn_ZA",
    "to_TO",
    "tok",
    "tpi_PG",
    "tr_CY.UTF-8",
    "tr_CY8859-9",
    "tr_TR.UTF-8",
    "tr_TR8859-9",
    "ts_ZA",
    "tt_RU",
    "tt_RU@iqtelif",
    "ug_CN",
    "uk_UA.UTF-8",
    "uk_UA KOI8-U",
    "unm_US",
    "ur_IN",
    "ur_PK",
    "uz_UZ.UTF-8",
    "uz_UZ8859-1",
    "uz_UZ@cyrillic",
    "ve_ZA",
    "vi_VN",
    "wa_BE8859-1",
    "wa_BE@euro8859-15",
    "wa_BE.UTF-8",
    "wae_CH",
    "wal_ET",
    "wo_SN",
    "xh_ZA.UTF-8",
    "xh_ZA8859-1",
    "yi_US.UTF-8",
    "yi_US",
    "yo_NG",
    "yue_HK",
    "yuw_PG",
    "zgh_MA",
    "zh_CN.GB18030",
    "zh_CN.GBK GBK",
    "zh_CN.UTF-8",
    "zh_CN GB2312",
    "zh_HK.UTF-8",
    "zh_HK BIG5-HKSCS",
    "zh_SG.UTF-8",
    "zh_SG.GBK GBK",
    "zh_SG GB2312",
    "zh_TW.EUC-TW",
    "zh_TW.UTF-8 ",
    "zh_TW BIG5",
    "zu_ZA.UTF-8 ",
    "zu_ZA8859-1",
];

pub const NONE: &str = "none";
pub const GNOME_DESKTOP: &str = "gnome";
pub const DEEPIN_DESKTOP: &str = "deepin";
pub const BUDGIE_DESKTOP: &str = "budgie";
pub const KDE_DESKTOP: &str = "kde";
pub const CINNAMON_DESKTOP: &str = "cinnamon";
pub const CUTEFISH_DESKTOP: &str = "cutefish";
pub const LXQT_DESKTOP: &str = "lxqt";
pub const ENLIGHTEMENT_DESKTOP: &str = "enlightement";
pub const XFCE_DESKTOP: &str = "xfce";
pub const QTILE_WINDOW_MANAGER: &str = "qtile";
pub const XMONAD_WINDOW_MANAGER: &str = "xmonad";
pub const SWAY_WINDOW_MANAGER: &str = "sway";
pub const HYPRLAND_WINDOW_MANAGER: &str = "hyprland";
pub const AWESOME_WINDOW_MANAGER: &str = "awesome";
pub const BSPWM_WINDOW_MANAGER: &str = "bspwm";
pub const I3_WINDOW_MANAGER: &str = "i3";
pub const PRINTING: &str = "3d-printing";
pub const COCKPIT: &str = "cockpit";
pub const VIRTUALIZATION: &str = "virtualization";
pub const CONTAINER: &str = "container";
pub const HACKER: &str = "hacking";
pub const ASSEMBLY: &str = "assembly";
pub const ASSEMBLY_LANGUAGE: &str = "assembly";
pub const R_LANGUAGE: &str = "r";
pub const C_LANGUAGE: &str = "c";
pub const GO_LANGUAGE: &str = "go";
pub const OPENSSH: &str = "openssh";
pub const D_LANGUAGE: &str = "d";
pub const RUST_LANGUAGE: &str = "rust";
pub const PHP_LANGUAGE: &str = "php";
pub const PYTHON_LANGUAGE: &str = "python";

pub const PROFILES: [&str; 32] = [
    NONE,
    ASSEMBLY,
    GNOME_DESKTOP,
    DEEPIN_DESKTOP,
    BUDGIE_DESKTOP,
    KDE_DESKTOP,
    CINNAMON_DESKTOP,
    CUTEFISH_DESKTOP,
    LXQT_DESKTOP,
    ENLIGHTEMENT_DESKTOP,
    QTILE_WINDOW_MANAGER,
    XFCE_DESKTOP,
    SWAY_WINDOW_MANAGER,
    XMONAD_WINDOW_MANAGER,
    HYPRLAND_WINDOW_MANAGER,
    SWAY_WINDOW_MANAGER,
    AWESOME_WINDOW_MANAGER,
    BSPWM_WINDOW_MANAGER,
    I3_WINDOW_MANAGER,
    COCKPIT,
    HACKER,
    OPENSSH,
    R_LANGUAGE,
    C_LANGUAGE,
    PYTHON_LANGUAGE,
    PHP_LANGUAGE,
    RUST_LANGUAGE,
    GO_LANGUAGE,
    D_LANGUAGE,
    PRINTING,
    VIRTUALIZATION,
    CONTAINER,
];

#[derive(Default)]
pub struct Mirrors {
    pub country: String,
    pub protocol: String,
    pub sort: String,
    pub save_at: String,
}

#[derive(Default)]
pub struct Os {
    pub mirrors: Mirrors,
}

fn cls() {
    assert!(Command::new("clear").spawn().expect("linux").wait().is_ok());
}
async fn ai() {
    let gemini = Gemini::new(
        Some(var("API_KEY").expect("no API_KEY founded").as_str()),
        None,
    );
    loop {
        let prompt = Text::new("").prompt().unwrap_or_default();
        match gemini.ask(prompt.as_str()).await {
            Ok(response) => {
                cls();
                let x = response.join("\n");
                print!("{x}");
            }
            Err(e) => eprintln!("Error: {e}"),
        }
        if Confirm::new("Quit ? :")
            .with_default(false)
            .prompt()
            .unwrap()
        {
            cls();
            break;
        }
    }
}
fn select(prompt: &str, opts: Vec<String>) -> String {
    cls();
    Select::new(prompt, opts.to_vec())
        .prompt()
        .unwrap_or_default()
}
fn text(prompt: &str) -> String {
    Text::new(prompt).prompt().unwrap_or_default()
}
async fn ask(
    title: &str,
    description: &str,
    app: &mut Os,
    c: fn(&mut Os) -> Result<(), Error>,
) -> Result<(), Error> {
    assert!(assistant(title, description).await.is_ok());
    cls();
    assert!(c(app).is_ok());
    Ok(())
}
async fn assistant(title: &str, description: &str) -> Result<(), Error> {
    cls();
    println!("{title}\n{description}");
    if Confirm::new("Do you want chat with the AI before continue ?")
        .with_default(true)
        .prompt()
        .unwrap()
    {
        ai().await;
    }
    Ok(())
}

fn configure_archlinux_mirrors(os: &mut Os) -> Result<(), Error> {
    os.mirrors.country.clear();
    os.mirrors.protocol.clear();
    os.mirrors.save_at.clear();
    os.mirrors.sort.clear();
    os.mirrors.country.push_str(
        select(
            "Enter your country:",
            vec![
                "Australia".to_string(),
                "Austria".to_string(),
                "Azerbaijan".to_string(),
                "Bangladesh".to_string(),
                "Belarus".to_string(),
                "Belgium".to_string(),
                "Bosnia and Herzegovina".to_string(),
                "Brazil".to_string(),
                "Bulgaria".to_string(),
                "Cambodia".to_string(),
                "Canada".to_string(),
                "Chile".to_string(),
                "Colombia".to_string(),
                "Croatia".to_string(),
                "Czechia".to_string(),
                "Denmark".to_string(),
                "Ecuador".to_string(),
                "Estonia".to_string(),
                "Finland".to_string(),
                "France".to_string(),
                "Georgia".to_string(),
                "Germany".to_string(),
                "Greece".to_string(),
                "Hungary".to_string(),
                "Iceland".to_string(),
                "India".to_string(),
                "Indonesia".to_string(),
                "Iran".to_string(),
                "Israel".to_string(),
                "Italy".to_string(),
                "Japan".to_string(),
                "Kazakhstan".to_string(),
                "Kenya".to_string(),
                "Latvia".to_string(),
                "Lithuania".to_string(),
                "Luxembourg".to_string(),
                "Mauritius".to_string(),
                "Mexico".to_string(),
                "Moldova".to_string(),
                "Monaco".to_string(),
                "Netherlands".to_string(),
                "New Caledonia".to_string(),
                "New Zealand".to_string(),
                "North Macedonia".to_string(),
                "Norway".to_string(),
                "Paraguay".to_string(),
                "Poland".to_string(),
                "Portugal".to_string(),
                "Romania".to_string(),
                "Réunion".to_string(),
                "Serbia".to_string(),
                "Singapore".to_string(),
                "Slovakia".to_string(),
                "Slovenia".to_string(),
                "South Africa".to_string(),
                "South Korea".to_string(),
                "Spain".to_string(),
                "Sweden".to_string(),
                "Switzerland".to_string(),
                "Taiwan".to_string(),
                "Thailand".to_string(),
                "Türkiye".to_string(),
                "Ukraine".to_string(),
                "United Kingdom".to_string(),
                "United States".to_string(),
                "Uzbekistan".to_string(),
                "Vietnam".to_string(),
            ],
        )
        .as_str(),
    );
    os.mirrors.protocol.push_str(
        select(
            "Enter mirror protocol:",
            vec![
                "https".to_string(),
                "http".to_string(),
                "rsync".to_string(),
                "ftp".to_string(),
            ]
            .to_vec(),
        )
        .as_str(),
    );
    os.mirrors.sort.push_str(
        select(
            "Enter the sort option:",
            vec![
                "rate".to_string(),
                "delay".to_string(),
                "age".to_string(),
                "score".to_string(),
                "country".to_string(),
            ]
            .to_vec(),
        )
        .as_str(),
    );
    os.mirrors.save_at.push_str("/etc/pacman.d/mirrorlist");
    if os.mirrors.country.is_empty()
        || os.mirrors.protocol.is_empty()
        || os.mirrors.save_at.is_empty()
        || os.mirrors.sort.is_empty()
    {
        return configure_archlinux_mirrors(os);
    }
    Ok(())
}

fn configure_gentoo_mirrors(os: &mut Os) -> Result<(), Error> {
    os.mirrors.country.clear();
    os.mirrors.protocol.clear();
    os.mirrors.save_at.clear();
    os.mirrors.sort.clear();
    os.mirrors
        .country
        .push_str(text("Enter your country:").as_str());
    os.mirrors
        .protocol
        .push_str(text("Enter the mirror protocol:").as_str());
    os.mirrors
        .sort
        .push_str(text("Enter the sort mirror option:").as_str());
    os.mirrors.save_at.push_str("/etc/pacman.d/mirrorlist");
    if os.mirrors.country.is_empty()
        || os.mirrors.protocol.is_empty()
        || os.mirrors.save_at.is_empty()
        || os.mirrors.sort.is_empty()
    {
        return configure_gentoo_mirrors(os);
    }
    Ok(())
}

pub async fn confirm(prompt: &str) -> bool {
    Confirm::new(prompt).with_default(false).prompt().unwrap()
}
async fn install_archlinux(app: &mut Os) -> Result<(), Error> {
    if ask(
        "Use fasts mirrors",
        "Generate the mirrors list to get fasted mirrors base on the country.",
        app,
        |app| configure_archlinux_mirrors(app),
    )
    .await
    .is_ok()
    {
        assert!(Command::new("reflector")
            .stdout(Stdio::null())
            .stderr(Stdio::null())
            .arg("-c")
            .arg(app.mirrors.country.as_str())
            .arg("--sort")
            .arg(app.mirrors.sort.as_str())
            .arg("--save")
            .arg(app.mirrors.save_at.as_str())
            .arg("-p")
            .arg(app.mirrors.protocol.as_str())
            .current_dir("/tmp")
            .spawn()
            .expect("missing reflector")
            .wait()
            .expect("")
            .success());
        return Ok(());
    }
    Err(Error::new(ErrorKind::Interrupted, "installation failed"))
}
async fn install_gentoo(app: &mut Os) -> Result<(), Error> {
    if ask(
        "Use fasts mirrors",
        "Generate the mirrors list to get fasted mirrors base on the country.",
        app,
        |app| configure_gentoo_mirrors(app),
    )
    .await
    .is_ok()
    {
        return Ok(());
    }
    Err(Error::new(ErrorKind::Interrupted, "installation failed"))
}

#[tokio::main]
async fn main() -> Result<(), Error> {
    cls();
    let mut app = Os::default();
    if confirm("Run installation ?").await.eq(&true) {
        let os = select(
            "What distribution you want to install ?",
            vec!["archlinux".to_string(), "gentoo".to_string()],
        );
        if confirm(format!("run {os} installer ?").as_str()).await {
            return match os.as_str() {
                "archlinux" => install_archlinux(&mut app).await,
                "gentoo" => install_gentoo(&mut app).await,
                _ => unreachable!("no possible"),
            };
        }
        println!("Installation aborted");
        return Ok(());
    }
    cls();
    println!("Bye");
    Ok(())
}
